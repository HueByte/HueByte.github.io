{"version":3,"file":"static/js/77.3e1fa6eb.chunk.js","mappings":"+OAqJA,EAzIqB,WACnB,OAAoCA,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,MAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,EAAQ,CACZ,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,WAAY,UACZC,IAAK,UACLC,KAAM,YAGRC,EAAAA,EAAAA,YAAU,YACR,uBAAC,2GACkBC,MAAM,8CAA8CC,MACnE,SAACC,GAAD,OAAcA,EAASC,MAAvB,IAFH,cACKC,EADL,gBAKkBJ,MAAM,wCAAwCC,MAC7D,SAACC,GAAD,OAAcA,EAASC,MAAvB,IANH,OAKKb,EALL,OASCD,EACEe,EACGC,QAAO,SAACC,GACP,OAAoB,GAAbA,EAAKC,IACb,IACAC,MAAK,SAACC,EAAGC,GACR,OAAOA,EAAEC,iBAAmBF,EAAEE,gBAC/B,KAGLpB,EAAQD,GAERH,GAAc,GArBf,0CAAD,EAuBD,GAAE,IAEH,IAAMyB,EAAmB,SAACC,GAAc,IAAD,MAErC,OADAA,EAAQ,UAAGA,SAAH,QAAe,OACvB,UAAOrB,EAAK,UAACqB,SAAD,aAAC,EAAUC,sBAAvB,QAAyC,MAC1C,EAED,OACE,iBACEC,UAAU,yBACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAAA,IAFnC,WAIE,0BACGhC,GACC,SAACiC,EAAA,EAAD,CAAQC,OAAO,KAEf,iCACE,gBAAKL,UAAU,OAAf,SACGzB,GACC,iCACE,gBAAKyB,UAAU,SAAf,UACE,gBAAKM,IAAI,iCAAiCC,IAAI,eAEhD,iBAAKP,UAAU,YAAf,WACE,iBAAKA,UAAU,OAAf,0BAA0BzB,EAAKiC,MAA/B,oBACA,gBAAKR,UAAU,MAAf,SAAsBzB,EAAKkC,OAC3B,iBAAKT,UAAU,QAAf,WACE,iBAAKA,UAAU,MAAf,WACE,SAAC,MAAD,IADF,mBAEmB,QAEnB,gBAAKA,UAAU,QAAf,SAAwBzB,EAAKmC,mBAE/B,iBAAKV,UAAU,QAAf,WACE,iBAAKA,UAAU,MAAf,WACE,SAAC,MAAD,IADF,gBAEgB,QAEhB,gBAAKA,UAAU,QAAf,SAAwBzB,EAAKoC,sBAKnC,2BAGJ,iBAAKX,UAAU,eAAf,WACE,gBAAKA,UAAU,QAAf,sCACC3B,EAAMuC,OAAS,EAAf,OACCvC,QADD,IACCA,OADD,EACCA,EAAOwC,KAAI,SAACxB,GAAD,aACT,eACEyB,KAAMzB,EAAK0B,SACXC,OAAO,SACPhB,UAAU,uBAHZ,WAKE,iBAAKA,UAAU,OAAf,WACE,SAAC,KAAD,IADF,IACuBX,EAAK4B,SAE5B,gBAAKjB,UAAU,cAAf,SAA8BX,EAAK6B,eACnC,iBAAKlB,UAAU,iBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,4BACA,gBACEA,UAAU,QACVC,MAAO,CACLkB,MAAOtB,EAAiBR,EAAKS,UAC7BsB,SAAU,SAJd,mBAOG/B,EAAKS,gBAPR,QAOoB,aAGtB,iBAAKE,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,2BACA,gBAAKA,UAAU,QAAf,SACG,IAAIqB,KAAKhC,EAAKiC,YAAYC,2BAG/B,iBAAKvB,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,UACE,SAAC,MAAD,OAEF,gBAAKA,UAAU,QAAf,SAAwBX,EAAKO,2BAjC1B,KAuCX,iCAMV,SAAC4B,EAAA,EAAD,MAGL,C","sources":["pages/repositories/Repositories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport Loader from \"../../core/loader/Loader\";\r\nimport \"./Repositories.scss\";\r\nimport {\r\n  RiGitBranchLine,\r\n  RiGitRepositoryFill,\r\n  RiUserFollowLine,\r\n} from \"react-icons/ri\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport bg from \"../../assets/sprinkle.svg\";\r\n\r\nconst Repositories = () => {\r\n  const [isFetching, setIsFetching] = useState(true);\r\n  const [repos, setRepos] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const langs = {\r\n    \"c#\": \"#af36ff\",\r\n    scss: \"#ff36c6\",\r\n    html: \"#ff5917\",\r\n    javascript: \"#ffdf6b\",\r\n    typescript: \"#0096ed\",\r\n    css: \"#00fbff\",\r\n    null: \"#ff00a2\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      var data = await fetch(\"https://api.github.com/users/huebyte/repos\").then(\r\n        (response) => response.json()\r\n      );\r\n\r\n      var user = await fetch(\"https://api.github.com/users/huebyte\").then(\r\n        (response) => response.json()\r\n      );\r\n\r\n      setRepos(\r\n        data\r\n          .filter((item) => {\r\n            return item.fork == false;\r\n          })\r\n          .sort((a, b) => {\r\n            return b.stargazers_count - a.stargazers_count;\r\n          })\r\n      );\r\n\r\n      setUser(user);\r\n\r\n      setIsFetching(false);\r\n    })();\r\n  }, []);\r\n\r\n  const getLanguageColor = (language) => {\r\n    language = language ?? \"null\";\r\n    return langs[language?.toLowerCase()] ?? \"#FFF\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"repositories-container\"\r\n      style={{ backgroundImage: `url(${bg}` }}\r\n    >\r\n      <main>\r\n        {isFetching ? (\r\n          <Loader local={true} />\r\n        ) : (\r\n          <>\r\n            <div className=\"user\">\r\n              {user ? (\r\n                <>\r\n                  <div className=\"avatar\">\r\n                    <img src=\"https://github.com/huebyte.png\" alt=\"huebyte\" />\r\n                  </div>\r\n                  <div className=\"user-info\">\r\n                    <div className=\"name\">üçß {user.login} üçß</div>\r\n                    <div className=\"bio\">{user.bio}</div>\r\n                    <div className=\"field\">\r\n                      <div className=\"key\">\r\n                        <RiGitRepositoryFill />\r\n                        Repositories:~ ${\" \"}\r\n                      </div>\r\n                      <div className=\"value\">{user.public_repos}</div>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                      <div className=\"key\">\r\n                        <RiUserFollowLine />\r\n                        Followers:~ ${\" \"}\r\n                      </div>\r\n                      <div className=\"value\">{user.followers}</div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div className=\"repositories\">\r\n              <div className=\"title\">HueByte@Repositories:~ $</div>\r\n              {repos.length > 0 ? (\r\n                repos?.map((data) => (\r\n                  <a\r\n                    href={data.html_url}\r\n                    target=\"_blank\"\r\n                    className=\"repository-container\"\r\n                  >\r\n                    <div className=\"name\">\r\n                      <RiGitBranchLine /> {data.name}\r\n                    </div>\r\n                    <div className=\"description\">{data.description}</div>\r\n                    <div className=\"info-container\">\r\n                      <div className=\"item\">\r\n                        <div className=\"key\">Main Language</div>\r\n                        <div\r\n                          className=\"value\"\r\n                          style={{\r\n                            color: getLanguageColor(data.language),\r\n                            fontSize: \"1.1em\",\r\n                          }}\r\n                        >\r\n                          {data.language ?? \"null\"}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"key\">Created Date</div>\r\n                        <div className=\"value\">\r\n                          {new Date(data.created_at).toLocaleDateString()}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"key\">\r\n                          <FaStar />\r\n                        </div>\r\n                        <div className=\"value\">{data.stargazers_count}</div>\r\n                      </div>\r\n                    </div>\r\n                  </a>\r\n                ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n"],"names":["useState","isFetching","setIsFetching","repos","setRepos","user","setUser","langs","scss","html","javascript","typescript","css","null","useEffect","fetch","then","response","json","data","filter","item","fork","sort","a","b","stargazers_count","getLanguageColor","language","toLowerCase","className","style","backgroundImage","bg","Loader","local","src","alt","login","bio","public_repos","followers","length","map","href","html_url","target","name","description","color","fontSize","Date","created_at","toLocaleDateString","Footer"],"sourceRoot":""}