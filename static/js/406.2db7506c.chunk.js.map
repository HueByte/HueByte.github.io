{"version":3,"file":"static/js/406.2db7506c.chunk.js","mappings":"wOAiCA,EA9BoB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACtB,OAAKA,GAGJ,iBAAKC,UAAU,OAAf,WACC,gBAAKA,UAAU,SAAf,UACC,gBAAKC,IAAI,iCAAiCC,IAAI,eAE/C,iBAAKF,UAAU,YAAf,WACC,iBAAKA,UAAU,OAAf,0BAA0BD,EAAKI,MAA/B,oBACA,gBAAKH,UAAU,MAAf,SAAsBD,EAAKK,OAC3B,iBAAKJ,UAAU,QAAf,WACC,iBAAKA,UAAU,MAAf,WACC,SAAC,MAAD,IADD,mBAEkB,QAElB,gBAAKA,UAAU,QAAf,SAAwBD,EAAKM,mBAE9B,iBAAKL,UAAU,QAAf,WACC,iBAAKA,UAAU,MAAf,WACC,SAAC,MAAD,IADD,gBAEe,QAEf,gBAAKA,UAAU,QAAf,SAAwBD,EAAKO,qBAtBf,IA2BlB,E,kBCyCD,EAnEuB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAgB/B,OACC,eACCC,KAAMF,EAAKG,SACXC,OAAO,SACPX,UAAU,uBACVY,IAAI,aAJL,WAMC,iBAAKZ,UAAU,cAAf,WACC,iBAAKA,UAAU,OAAf,WACC,SAAC,KAAD,CAAiBA,UAAU,eAC3B,0BAAOO,EAAKM,OACXN,EAAKO,UAAW,iBAAMd,UAAU,gBAAhB,wBAEjBO,EAAKQ,WACL,iBAAKf,UAAU,iBAAf,WACC,iBACCA,UAAU,eACVgB,MAAO,CAAEC,gBAAiBT,EAAiBD,EAAKQ,aAEhDR,EAAKQ,gBAKT,gBAAKf,UAAU,cAAf,SACEO,EAAKW,aAAe,8BAGtB,iBAAKlB,UAAU,cAAf,WACC,iBAAKA,UAAU,QAAf,WACC,iBAAKA,UAAU,YAAf,WACC,SAAC,MAAD,CAAQA,UAAU,eAClB,0BAAOO,EAAKY,uBAEb,iBAAKnB,UAAU,YAAf,WACC,SAAC,MAAD,CAAiBA,UAAU,eAC3B,0BAAOO,EAAKa,kBAEb,iBAAKpB,UAAU,YAAf,WACC,SAAC,MAAD,CAAOA,UAAU,eACjB,0BAAOO,EAAKc,wBAGd,iBAAKrB,UAAU,eAAf,qBA1DgB,SAACsB,GACnB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAM,IAAID,KACVE,EAAWC,KAAKC,IAAIH,EAAMF,GAC1BM,EAAWF,KAAKG,KAAKJ,EAAQ,OAEnC,OAAIG,EAAW,GACR,GAAN,OAAUA,EAAV,aACUA,EAAW,IACf,GAAN,OAAUF,KAAKI,MAAMF,EAAW,IAAhC,eAEM,GAAN,OAAUF,KAAKI,MAAMF,EAAW,KAAhC,aAED,CA8CYG,CAAWzB,EAAK0B,oBAK7B,EChDD,EAnBuB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAO1B,EAAuB,EAAvBA,iBAChC,OACC,iBAAKR,UAAU,eAAf,WACC,gBAAKA,UAAU,QAAf,sCACCkC,EAAMC,OAAS,EACfD,EAAME,KAAI,SAAC7B,GAAD,OACT,SAAC,EAAD,CAECA,KAAMA,EACNC,iBAAkBA,GAFbD,EAAK8B,GAFF,KAQV,qDAIH,EC8CD,EAzDqB,WACnB,MCR2B,WAC5B,OAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAcO,EAAd,KACA,GAAwBH,EAAAA,EAAAA,UAAS,MAAjC,eAAOvC,EAAP,KAAa2C,EAAb,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAe,yCAAG,8HAEsBC,QAAQC,IAAI,CACvDC,MAAM,8CACNA,MAAM,0CAJe,sCAEfC,EAFe,KAEAC,EAFA,cAOED,EAAcE,OAPhB,cAOhBC,EAPgB,iBAQCF,EAAaC,OARd,QAQhBE,EARgB,OAUhBC,EAAgBF,EACpBG,QAAO,SAACC,GAAD,OAAWA,EAAKC,IAAhB,IACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAExC,iBAAmBuC,EAAEvC,gBAAjC,IAEPsB,EAASY,GACTX,EAAQU,GAfc,kDAiBtBQ,QAAQC,MAAM,8BAAd,MAjBsB,yBAmBtBrB,GAAc,GAnBQ,6EAAH,qDAuBrBI,GACA,GAAE,IAEI,CAAEL,WAAAA,EAAYL,MAAAA,EAAOnC,KAAAA,EAC5B,CDzBqC+D,GAA5BvB,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,MAAOnC,EAA3B,EAA2BA,KAErBgE,EAAQ,CACZ,KAAM,UACN,MAAO,UACP,EAAK,UACLC,IAAK,UACLC,KAAM,UACNC,WAAY,UACZC,GAAI,UACJC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZpB,KAAM,UACNqB,OAAQ,UACRC,IAAK,UACLC,SAAU,UACVC,IAAK,UACLC,OAAQ,UACRC,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,IAAK,UACLC,KAAM,UACNC,KAAM,WAQR,OACE,iBACErF,UAAU,yBACVgB,MAAO,CAAEsE,gBAAgB,OAAD,OAASC,EAAAA,IAFnC,WAIE,0BACGhD,GACC,SAACiD,EAAA,EAAD,CAAQC,OAAO,KAEf,iCACE,SAAC,EAAD,CAAa1F,KAAMA,KACnB,SAAC,EAAD,CAAgBmC,MAAOA,EAAO1B,iBAhBf,SAACO,GAAc,IAAD,MAErC,OADAA,EAAQ,UAAGA,SAAH,QAAe,OACvB,UAAOgD,EAAK,UAAChD,SAAD,aAAC,EAAU2E,sBAAvB,QAAyC,MAC1C,UAiBG,SAACC,EAAA,EAAD,MAGL,C","sources":["pages/repositories/components/UserProfile.jsx","pages/repositories/components/RepositoryCard.jsx","pages/repositories/components/RepositoryList.jsx","pages/repositories/Repositories.jsx","pages/repositories/hooks/useGitHubData.js"],"sourcesContent":["import React from \"react\";\r\nimport { RiGitRepositoryFill, RiUserFollowLine } from \"react-icons/ri\";\r\n\r\nconst UserProfile = ({ user }) => {\r\n\tif (!user) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"user\">\r\n\t\t\t<div className=\"avatar\">\r\n\t\t\t\t<img src=\"https://github.com/huebyte.png\" alt=\"huebyte\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"name\">üçß {user.login} üçß</div>\r\n\t\t\t\t<div className=\"bio\">{user.bio}</div>\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<div className=\"key\">\r\n\t\t\t\t\t\t<RiGitRepositoryFill />\r\n\t\t\t\t\t\tRepositories:~ ${\" \"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"value\">{user.public_repos}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<div className=\"key\">\r\n\t\t\t\t\t\t<RiUserFollowLine />\r\n\t\t\t\t\t\tFollowers:~ ${\" \"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"value\">{user.followers}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UserProfile;","import React from \"react\";\r\nimport { RiGitBranchLine } from \"react-icons/ri\";\r\nimport { FaStar, FaEye } from \"react-icons/fa\";\r\nimport { BiGitRepoForked } from \"react-icons/bi\";\r\n\r\nconst RepositoryCard = ({ repo, getLanguageColor }) => {\r\n\tconst formatDate = (dateString) => {\r\n\t\tconst date = new Date(dateString);\r\n\t\tconst now = new Date();\r\n\t\tconst diffTime = Math.abs(now - date);\r\n\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\t\t\r\n\t\tif (diffDays < 30) {\r\n\t\t\treturn `${diffDays} days ago`;\r\n\t\t} else if (diffDays < 365) {\r\n\t\t\treturn `${Math.floor(diffDays / 30)} months ago`;\r\n\t\t} else {\r\n\t\t\treturn `${Math.floor(diffDays / 365)} years ago`;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref={repo.html_url}\r\n\t\t\ttarget=\"_blank\"\r\n\t\t\tclassName=\"repository-container\"\r\n\t\t\trel=\"noreferrer\"\r\n\t\t>\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t<RiGitBranchLine className=\"repo-icon\" /> \r\n\t\t\t\t\t<span>{repo.name}</span>\r\n\t\t\t\t\t{repo.private && <span className=\"private-badge\">Private</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t{repo.language && (\r\n\t\t\t\t\t<div className=\"language-badge\">\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\tclassName=\"language-dot\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: getLanguageColor(repo.language) }}\r\n\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t{repo.language}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"description\">\r\n\t\t\t\t{repo.description || \"No description available\"}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t<div className=\"stat-item\">\r\n\t\t\t\t\t\t<FaStar className=\"stat-icon\" />\r\n\t\t\t\t\t\t<span>{repo.stargazers_count}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"stat-item\">\r\n\t\t\t\t\t\t<BiGitRepoForked className=\"stat-icon\" />\r\n\t\t\t\t\t\t<span>{repo.forks_count}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"stat-item\">\r\n\t\t\t\t\t\t<FaEye className=\"stat-icon\" />\r\n\t\t\t\t\t\t<span>{repo.watchers_count}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"updated-date\">\r\n\t\t\t\t\tUpdated {formatDate(repo.updated_at)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default RepositoryCard;","import React from \"react\";\r\nimport RepositoryCard from \"./RepositoryCard\";\r\n\r\nconst RepositoryList = ({ repos, getLanguageColor }) => {\r\n\treturn (\r\n\t\t<div className=\"repositories\">\r\n\t\t\t<div className=\"title\">HueByte@Repositories:~ $</div>\r\n\t\t\t{repos.length > 0 ? (\r\n\t\t\t\trepos.map((repo) => (\r\n\t\t\t\t\t<RepositoryCard \r\n\t\t\t\t\t\tkey={repo.id}\r\n\t\t\t\t\t\trepo={repo} \r\n\t\t\t\t\t\tgetLanguageColor={getLanguageColor} \r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<div>No repositories found</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RepositoryList;","import React from \"react\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport Loader from \"../../core/loader/Loader\";\r\nimport \"./Repositories.scss\";\r\nimport bg from \"../../assets/sprinkle.svg\";\r\nimport { useGitHubData } from \"./hooks/useGitHubData\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport RepositoryList from \"./components/RepositoryList\";\r\n\r\nconst Repositories = () => {\r\n  const { isFetching, repos, user } = useGitHubData();\r\n  \r\n  const langs = {\r\n    \"c#\": \"#239120\",\r\n    \"c++\": \"#f34b7d\",\r\n    \"c\": \"#555555\",\r\n    css: \"#1572B6\",\r\n    dart: \"#0175C2\",\r\n    dockerfile: \"#384d54\",\r\n    go: \"#00ADD8\",\r\n    html: \"#e34c26\",\r\n    java: \"#ED8B00\",\r\n    javascript: \"#f1e05a\",\r\n    json: \"#292929\",\r\n    kotlin: \"#A97BFF\",\r\n    lua: \"#000080\",\r\n    markdown: \"#083fa1\",\r\n    php: \"#4F5D95\",\r\n    python: \"#3572A5\",\r\n    ruby: \"#701516\",\r\n    rust: \"#dea584\",\r\n    scala: \"#c22d40\",\r\n    scss: \"#c6538c\",\r\n    shell: \"#89e051\",\r\n    swift: \"#ffac45\",\r\n    typescript: \"#2b7489\",\r\n    vue: \"#2c3e50\",\r\n    yaml: \"#cb171e\",\r\n    null: \"#858585\",\r\n  };\r\n\r\n  const getLanguageColor = (language) => {\r\n    language = language ?? \"null\";\r\n    return langs[language?.toLowerCase()] ?? \"#FFF\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"repositories-container\"\r\n      style={{ backgroundImage: `url(${bg}` }}\r\n    >\r\n      <main>\r\n        {isFetching ? (\r\n          <Loader local={true} />\r\n        ) : (\r\n          <>\r\n            <UserProfile user={user} />\r\n            <RepositoryList repos={repos} getLanguageColor={getLanguageColor} />\r\n          </>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useGitHubData = () => {\r\n\tconst [isFetching, setIsFetching] = useState(true);\r\n\tconst [repos, setRepos] = useState([]);\r\n\tconst [user, setUser] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchGitHubData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst [reposResponse, userResponse] = await Promise.all([\r\n\t\t\t\t\tfetch(\"https://api.github.com/users/huebyte/repos\"),\r\n\t\t\t\t\tfetch(\"https://api.github.com/users/huebyte\")\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tconst reposData = await reposResponse.json();\r\n\t\t\t\tconst userData = await userResponse.json();\r\n\r\n\t\t\t\tconst filteredRepos = reposData\r\n\t\t\t\t\t.filter((item) => !item.fork)\r\n\t\t\t\t\t.sort((a, b) => b.stargazers_count - a.stargazers_count);\r\n\r\n\t\t\t\tsetRepos(filteredRepos);\r\n\t\t\t\tsetUser(userData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching GitHub data:\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsFetching(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchGitHubData();\r\n\t}, []);\r\n\r\n\treturn { isFetching, repos, user };\r\n};"],"names":["user","className","src","alt","login","bio","public_repos","followers","repo","getLanguageColor","href","html_url","target","rel","name","private","language","style","backgroundColor","description","stargazers_count","forks_count","watchers_count","dateString","date","Date","now","diffTime","Math","abs","diffDays","ceil","floor","formatDate","updated_at","repos","length","map","id","useState","isFetching","setIsFetching","setRepos","setUser","useEffect","fetchGitHubData","Promise","all","fetch","reposResponse","userResponse","json","reposData","userData","filteredRepos","filter","item","fork","sort","a","b","console","error","useGitHubData","langs","css","dart","dockerfile","go","html","java","javascript","kotlin","lua","markdown","php","python","ruby","rust","scala","scss","shell","swift","typescript","vue","yaml","null","backgroundImage","bg","Loader","local","toLowerCase","Footer"],"sourceRoot":""}